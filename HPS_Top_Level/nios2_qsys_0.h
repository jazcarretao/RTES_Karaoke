#ifndef _ALTERA_NIOS2_QSYS_0_H_
#define _ALTERA_NIOS2_QSYS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'karaoke_soc' in
 * file 'Karaoke/hw/quartus/karaoke_soc.swinfo'.
 */

/*
 * This file contains macros for module 'nios2_qsys_0' and devices
 * connected to the following masters:
 *   data_master
 *   instruction_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for module 'nios2_qsys_0', class 'altera_nios2_qsys'.
 * The macros have no prefix.
 */
#define BIG_ENDIAN 0
#define BREAK_ADDR 0x8000820
#define CPU_FREQ 50000000
#define CPU_ID_SIZE 1
#define CPU_ID_VALUE 0x00000000
#define CPU_IMPLEMENTATION "fast"
#define DATA_ADDR_WIDTH 28
#define DCACHE_LINE_SIZE 32
#define DCACHE_LINE_SIZE_LOG2 5
#define DCACHE_SIZE 2048
#define EXCEPTION_ADDR 0x4000020
#define FLUSHDA_SUPPORTED 
#define HARDWARE_DIVIDE_PRESENT 0
#define HARDWARE_MULTIPLY_PRESENT 1
#define HARDWARE_MULX_PRESENT 0
#define HAS_DEBUG_CORE 1
#define HAS_DEBUG_STUB 
#define HAS_JMPI_INSTRUCTION 
#define ICACHE_LINE_SIZE 32
#define ICACHE_LINE_SIZE_LOG2 5
#define ICACHE_SIZE 4096
#define INITDA_SUPPORTED 
#define INST_ADDR_WIDTH 28
#define NUM_OF_SHADOW_REG_SETS 0
#define RESET_ADDR 0x4000000

/*
 * Macros for device 'new_sdram_controller_0', class 'altera_avalon_new_sdram_controller'
 * The macros are prefixed with 'NEW_SDRAM_CONTROLLER_0_'.
 * The prefix is the slave descriptor.
 */
#define NEW_SDRAM_CONTROLLER_0_COMPONENT_TYPE altera_avalon_new_sdram_controller
#define NEW_SDRAM_CONTROLLER_0_COMPONENT_NAME new_sdram_controller_0
#define NEW_SDRAM_CONTROLLER_0_BASE 0x4000000
#define NEW_SDRAM_CONTROLLER_0_SPAN 67108864
#define NEW_SDRAM_CONTROLLER_0_END 0x7ffffff
#define NEW_SDRAM_CONTROLLER_0_CAS_LATENCY 3
#define NEW_SDRAM_CONTROLLER_0_CONTENTS_INFO 
#define NEW_SDRAM_CONTROLLER_0_INIT_NOP_DELAY 0.0
#define NEW_SDRAM_CONTROLLER_0_INIT_REFRESH_COMMANDS 2
#define NEW_SDRAM_CONTROLLER_0_IS_INITIALIZED 1
#define NEW_SDRAM_CONTROLLER_0_POWERUP_DELAY 100.0
#define NEW_SDRAM_CONTROLLER_0_REFRESH_PERIOD 7.8125
#define NEW_SDRAM_CONTROLLER_0_REGISTER_DATA_IN 1
#define NEW_SDRAM_CONTROLLER_0_SDRAM_ADDR_WIDTH 25
#define NEW_SDRAM_CONTROLLER_0_SDRAM_BANK_WIDTH 2
#define NEW_SDRAM_CONTROLLER_0_SDRAM_COL_WIDTH 10
#define NEW_SDRAM_CONTROLLER_0_SDRAM_DATA_WIDTH 16
#define NEW_SDRAM_CONTROLLER_0_SDRAM_NUM_BANKS 4
#define NEW_SDRAM_CONTROLLER_0_SDRAM_NUM_CHIPSELECTS 1
#define NEW_SDRAM_CONTROLLER_0_SDRAM_ROW_WIDTH 13
#define NEW_SDRAM_CONTROLLER_0_SHARED_DATA 0
#define NEW_SDRAM_CONTROLLER_0_SIM_MODEL_BASE 0
#define NEW_SDRAM_CONTROLLER_0_STARVATION_INDICATOR 0
#define NEW_SDRAM_CONTROLLER_0_TRISTATE_BRIDGE_SLAVE ""
#define NEW_SDRAM_CONTROLLER_0_T_AC 5.4
#define NEW_SDRAM_CONTROLLER_0_T_MRD 3
#define NEW_SDRAM_CONTROLLER_0_T_RCD 15.0
#define NEW_SDRAM_CONTROLLER_0_T_RFC 70.0
#define NEW_SDRAM_CONTROLLER_0_T_RP 15.0
#define NEW_SDRAM_CONTROLLER_0_T_WR 14.0
#define NEW_SDRAM_CONTROLLER_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define NEW_SDRAM_CONTROLLER_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define NEW_SDRAM_CONTROLLER_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'performance_counter_0', class 'altera_avalon_performance_counter'
 * The macros are prefixed with 'PERFORMANCE_COUNTER_0_'.
 * The prefix is the slave descriptor.
 */
#define PERFORMANCE_COUNTER_0_COMPONENT_TYPE altera_avalon_performance_counter
#define PERFORMANCE_COUNTER_0_COMPONENT_NAME performance_counter_0
#define PERFORMANCE_COUNTER_0_BASE 0x8001000
#define PERFORMANCE_COUNTER_0_SPAN 64
#define PERFORMANCE_COUNTER_0_END 0x800103f
#define PERFORMANCE_COUNTER_0_HOW_MANY_SECTIONS 3

/*
 * Macros for device 'leds_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'LEDS_0_'.
 * The prefix is the slave descriptor.
 */
#define LEDS_0_COMPONENT_TYPE altera_avalon_pio
#define LEDS_0_COMPONENT_NAME leds_0
#define LEDS_0_BASE 0x8001040
#define LEDS_0_SPAN 16
#define LEDS_0_END 0x800104f
#define LEDS_0_BIT_CLEARING_EDGE_REGISTER 0
#define LEDS_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LEDS_0_CAPTURE 0
#define LEDS_0_DATA_WIDTH 10
#define LEDS_0_DO_TEST_BENCH_WIRING 0
#define LEDS_0_DRIVEN_SIM_VALUE 0
#define LEDS_0_EDGE_TYPE NONE
#define LEDS_0_FREQ 50000000
#define LEDS_0_HAS_IN 0
#define LEDS_0_HAS_OUT 1
#define LEDS_0_HAS_TRI 0
#define LEDS_0_IRQ_TYPE NONE
#define LEDS_0_RESET_VALUE 0

/*
 * Macros for device 'pio_key', class 'altera_avalon_pio'
 * The macros are prefixed with 'PIO_KEY_'.
 * The prefix is the slave descriptor.
 */
#define PIO_KEY_COMPONENT_TYPE altera_avalon_pio
#define PIO_KEY_COMPONENT_NAME pio_key
#define PIO_KEY_BASE 0x8001050
#define PIO_KEY_SPAN 16
#define PIO_KEY_END 0x800105f
#define PIO_KEY_IRQ 2
#define PIO_KEY_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_KEY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_KEY_CAPTURE 1
#define PIO_KEY_DATA_WIDTH 4
#define PIO_KEY_DO_TEST_BENCH_WIRING 0
#define PIO_KEY_DRIVEN_SIM_VALUE 0
#define PIO_KEY_EDGE_TYPE FALLING
#define PIO_KEY_FREQ 50000000
#define PIO_KEY_HAS_IN 1
#define PIO_KEY_HAS_OUT 0
#define PIO_KEY_HAS_TRI 0
#define PIO_KEY_IRQ_TYPE EDGE
#define PIO_KEY_RESET_VALUE 0

/*
 * Macros for device 'mailbox_simple_0', class 'altera_avalon_mailbox_simple'
 * The macros are prefixed with 'MAILBOX_SIMPLE_0_'.
 * The prefix is the slave descriptor.
 */
#define MAILBOX_SIMPLE_0_COMPONENT_TYPE altera_avalon_mailbox_simple
#define MAILBOX_SIMPLE_0_COMPONENT_NAME mailbox_simple_0
#define MAILBOX_SIMPLE_0_BASE 0x8001060
#define MAILBOX_SIMPLE_0_SPAN 16
#define MAILBOX_SIMPLE_0_END 0x800106f
#define MAILBOX_SIMPLE_0_IRQ 3

/*
 * Macros for device 'sysid', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_COMPONENT_NAME sysid
#define SYSID_BASE 0x8001070
#define SYSID_SPAN 8
#define SYSID_END 0x8001077
#define SYSID_ID 1
#define SYSID_TIMESTAMP 1464555746

/*
 * Macros for device 'Mixer_0', class 'Mixer'
 * The macros are prefixed with 'MIXER_0_'.
 * The prefix is the slave descriptor.
 */
#define MIXER_0_COMPONENT_TYPE Mixer
#define MIXER_0_COMPONENT_NAME Mixer_0
#define MIXER_0_BASE 0x8001078
#define MIXER_0_SPAN 8
#define MIXER_0_END 0x800107f

/*
 * Macros for device 'jtag_uart_0', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_0_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_0_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_0_COMPONENT_NAME jtag_uart_0
#define JTAG_UART_0_BASE 0x8001080
#define JTAG_UART_0_SPAN 8
#define JTAG_UART_0_END 0x8001087
#define JTAG_UART_0_IRQ 0
#define JTAG_UART_0_READ_DEPTH 64
#define JTAG_UART_0_READ_THRESHOLD 8
#define JTAG_UART_0_WRITE_DEPTH 64
#define JTAG_UART_0_WRITE_THRESHOLD 8


#endif /* _ALTERA_NIOS2_QSYS_0_H_ */
